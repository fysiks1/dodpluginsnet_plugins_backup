/* Plugin generated by AMXX-Studio 
   Plugin has been made to fit specific requests of 2Lt .M. Bosta, 502nd PIR
   Feel free to modify code to fit your specific needs ,but please credit me
   in your use - Cpt. Hood, 501st PIR
   
   Commands:
   amx_shift <#>  - switches ALL players to Allies(1)/Axis(2)/Spectators(3)
   ****MUST USE THE NUMBERS! DO NOT INPUT ALLIES OR AXIS! use 1, 2 or 3****
   amx_spectate <player>  - Forces player to spec.
   amx_allies <player>  - Forces player to allies.
   amx_axis <player>  - Forces player to axis.
   amx_rifle <player>  - Forces player to rifle.
   
   The allies and axis commands, as well as the switch commands force the user to Rifleman class.
   They also have a manual respawn built in to avoid bugginess of random classes and no respawns.
   
   The amx_shift command currently kills all players alive before switching them to avoid bugs, etc.
   
   The amx_rifle command is currently a 1 time command. This does not prevent them from respawning with another weapon.
   
   All commands can be issued to self, but not other admins with immunity. This can be changed by making
   the last flag of cmd_target 3 instead of 2 (the flags are additive, I believe).
*/

#include <amxmodx>
#include <amxmisc>
#include <dodfun>
#include <dodx>
#include <fun>


public plugin_init() 
{
	register_plugin("amx_teams", "1.0", "Hood [10th MD]")
	register_concmd("amx_shift", "team_switch", ADMIN_KICK, "<1/2/3 = Allies/Axis/Spectate>")
	register_concmd("amx_spectate", "amx_spectate", ADMIN_KICK, "<player>")
	register_concmd("amx_allies", "amx_allies", ADMIN_KICK, "<player>")
	register_concmd("amx_axis", "amx_axis", ADMIN_KICK, "<player>")
	register_concmd("amx_rifle", "force_rifle", ADMIN_KICK, "<player>")
}

public force_rifle(id,level,cid)
{
	if(!cmd_access(id,level,cid,2))
		return PLUGIN_HANDLED
	new Arg1 [32]
	read_argv(1, Arg1, 31)
	new player = cmd_target(id, Arg1, 2)
	if(!player)
	{
		console_print(id, "Sorry, player %s could not be found or targetted!", Arg1)
		return PLUGIN_HANDLED
         }
	else
	{
		if(get_user_team(player)==1) // if allies
		{
			if(dod_get_map_info(MI_ALLIES_TEAM)==0) // american
			{
				if(is_user_alive(player))
				dod_user_kill(player)
				set_task(0.1, "respawnAllies", player)
			}
			else	// british
			{
				if(is_user_alive(player))
				dod_user_kill(player)
				set_task(0.1, "respawnBrit", player)
			}
		}
		if(get_user_team(player)==2) // if axis
		{
			if(is_user_alive(player))
			dod_user_kill(player)
			set_task(0.1, "respawnAxis", player)
		}
		else
		{
			console_print(id, "Specified a bad player - not on axis/allies.")
			return PLUGIN_HANDLED
		}
	}
	return PLUGIN_HANDLED
}
	

public amx_spectate(id, level, cid)
{
	if(!cmd_access(id, level, cid, 2))
		return PLUGIN_HANDLED
	new Arg1 [32]
	read_argv(1, Arg1, 31)
	new player = cmd_target(id, Arg1, 2)
	if (!player)
         {
		console_print(id, "Sorry, player %s could not be found or targetted!", Arg1)
		return PLUGIN_HANDLED
         } 
	else 
	{
		if(get_user_team(player)!=3)
		dod_set_user_team(player, 3)
         }
	new plrname[32]
	get_user_name(player, plrname, 31)
	client_print(0, print_chat, "Player %s has been forced to spectate.", plrname)
	return PLUGIN_HANDLED
}

public amx_axis(id, level, cid)
{
	if(!cmd_access(id, level, cid, 2))
		return PLUGIN_HANDLED
	new Arg1 [32]
	read_argv(1, Arg1, 31)
	new player = cmd_target(id, Arg1, 2)
	if (!player)
         {
		console_print(id, "Sorry, player %s could not be found or targetted!", Arg1)
		return PLUGIN_HANDLED
         } 
	else 
	{
		new plrname[32]
		get_user_name(player, plrname, 31)
		client_print(0, print_chat, "Player %s has been forced to Axis.", plrname)
		if(is_user_alive(player))
		{
			dod_user_kill(player)
		}
		set_task(0.1, "respawnAxis", player)
         }
	return PLUGIN_HANDLED
}

public amx_allies(id, level, cid)
{
	if(!cmd_access(id, level, cid, 2))
		return PLUGIN_HANDLED
	new Arg1 [32]
	read_argv(1, Arg1, 31)
	new player = cmd_target(id, Arg1, 2)
	if (!player)
         {
		console_print(id, "Sorry, player %s could not be found or targetted!", Arg1)
		return PLUGIN_HANDLED
         } 
	else 
	{
		new plrname[32]
		get_user_name(player, plrname, 31)
		if(is_user_alive(player))
		dod_user_kill(player)
		//dod_set_user_team(player, 1, 1)
		if(dod_get_map_info(MI_ALLIES_TEAM)==0)
		{
			client_print(0, print_chat, "Player %s has been forced to Allies.", plrname)
			//dod_set_user_class(player, DODC_GARAND)
			set_task(0.1, "respawnAllies",player)
		}
		else
		{
			client_print(0, print_chat, "Player %s has been force to British.", plrname)
			//dod_set_user_class(player, DODC_ENFIELD)
			set_task(0.1, "respawnBrit", player)
		}
         }
	return PLUGIN_HANDLED
}

public team_switch(id,level,cid)
{
	if(!cmd_access(id,level,cid,2))
		return PLUGIN_HANDLED
	new teamNumStr [1], players [32], numPlayers, i, teamNum
	read_argv(1, teamNumStr, 1)
	teamNum = str_to_num(teamNumStr[0])
	get_players(players, numPlayers)
	switch(teamNum)
	{
		case 1:		// ALLIES
		{
			if(dod_get_map_info(MI_ALLIES_TEAM)==0)		//If American
			{
				client_print(0, print_chat, "All Players are being switched to Allies.")
				for(i=0;i<numPlayers;i++)
				{
					if(is_user_alive(players[i]))
					dod_user_kill(players[i])
					//dod_set_user_team(players[i], 1, 1)
					//dod_set_user_class(players[i], DODC_GARAND)
					set_task(0.1,"respawnAllies",players[i])
				}
			}
			else						//Must be British...
			{
				client_print(0, print_chat, "All Players are being switched to British.")
				for(i=0;i<numPlayers;i++)
				{
					if(is_user_alive(players[i]))
					dod_user_kill(players[i])
					//dod_set_user_team(players[i], 1, 1)
					//dod_set_user_class(players[i], DODC_ENFIELD)
					set_task(0.1,"respawnBrit",players[i])
				}
			}
		}
		case 2:		//AXIS
		{
			client_print(0, print_chat, "All Players being switched to Axis.")
			for(i=0;i<numPlayers;i++)
			{
				if(is_user_alive(players[i]))
				dod_user_kill(players[i])
				//dod_set_user_team(players[i], 2, 1)
				//dod_set_user_class(players[i], DODC_KAR)
				set_task(0.1,"respawnAxis",players[i])
			}
		}
		case 3: 	//Spectate.
		{
			for(i=0;i<numPlayers;i++)
			{
				if(is_user_alive(players[i]))
				dod_user_kill(players[i])
				dod_set_user_team(players[i], 3, 1)
			}
		}
		default:
		{
			console_print(id, "The number you specified is not valid - use 1, 2 or 3.")
		}
		
	}
	return PLUGIN_HANDLED
}

public respawnBrit(plr)
{
	dod_set_user_team(plr, 1, 1)
	dod_set_user_class(plr, DODC_ENFIELD)
	spawn(plr)	
}

public respawnAllies(plr)
{
	dod_set_user_team(plr, 1, 1)
	dod_set_user_class(plr, DODC_GARAND)
	spawn(plr)
}

public respawnAxis(plr)
{
	dod_set_user_team(plr, 2, 1)
	dod_set_user_class(plr, DODC_KAR)
	spawn(plr)
}
